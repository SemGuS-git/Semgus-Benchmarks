struct bt_2 {
    bit v0;
}
bit compare_bt_2 (bt_2 a, bt_2 b) {
    return !b.v0 || a.v0;
}

generator bit fixed_atom_bit () {
    return ??;
}

generator int fixed_atom_int () {
    int t = ??;
    if(t == 0) {
        return -100;
    }
    if(t == 1) {
        return 100;
    }
    return 0;
}

bt_2 bt_2_top () {
    return new bt_2(v0 = fixed_atom_bit());
}

void test_top (bt_2 a) {
    assert(compare_bt_2(a, bt_2_top()));
}

harness void forall_test_top (bit a_v0) {
    // Assemble structs
    bt_2 a = new bt_2(v0 = a_v0);
    test_top(a);
}

