(declare-term-types
((A 0) (B 0) (S 0) (S1 0) (Start 0))
((($IInt0 )
($IVara )
($IVarr )
($IVarn )
($IInt1 ))
(($< A A))
(($seq S1 S1))
(($int=r A)
($int=a A)
($int=n A))
(($while B S))))


(define-funs-rec
((A.Sem ((A_term_0 A) (r__0 Int) (n Int) (r Int) (a Int)) Bool)
(B.Sem ((B_term_0 B) (r__0 Bool) (n Int) (r Int) (a Int)) Bool)
(S.Sem ((S_term_0 S) (n_r0 Int) (r_r0 Int) (a_r0 Int) (n Int) (r Int) (a Int)) Bool)
(S1.Sem ((S1_term_0 S1) (n_r0 Int) (r_r0 Int) (a_r0 Int) (n Int) (r Int) (a Int)) Bool)
(Start.Sem ((Start_term_0 Start) (n_r0 Int) (r_r0 Int) (a_r0 Int) (n Int) (r Int) (a Int)) Bool))

((match A_term_0
  (($IInt0 (exists ((r__1 Int)) (and (= r__0 r__1)
  (= r__1 0))))
($IVara (exists ((r__1 Int)) (and (= r__0 r__1)
  (= r__1 a))))
($IVarr (exists ((r__1 Int)) (and (= r__0 r__1)
  (= r__1 r))))
($IVarn (exists ((r__1 Int)) (and (= r__0 r__1)
  (= r__1 n))))
($IInt1 (exists ((r__1 Int)) (and (= r__0 r__1)
  (= r__1 1))))))
(match B_term_0
  ((($< A_term_1 A_term_2) (exists ((r__1 Int) (r__2 Int)) (and (= r__0 (< r__1 r__2))
  (A.Sem A_term_1 r__1 n r a)
  (A.Sem A_term_2 r__2 n r a))))))
(match S_term_0
  ((($seq S1_term_1 S1_term_2) (exists ((n_r1 Int) (r_r1 Int) (a_r1 Int)) (and (S1.Sem S1_term_1 n_r1 r_r1 a_r1 n r a)
  (S1.Sem S1_term_2 n_r0 r_r0 a_r0 n_r1 r_r1 a_r1))))))
(match S1_term_0
  ((($int=r A_term_1) (exists ((r__1 Int)) (and (and (= n n_r0)
  (= r r__1)
  (= a a_r0))
  (A.Sem A_term_1 r__1 n r a))))
(($int=a A_term_1) (exists ((r__1 Int)) (and (and (= n n_r0)
  (= r r_r0)
  (= a r__1))
  (A.Sem A_term_1 r__1 n r a))))
(($int=n A_term_1) (exists ((r__1 Int)) (and (and (= n r__1)
  (= r r_r0)
  (= a a_r0))
  (A.Sem A_term_1 r__1 n r a))))))
(match Start_term_0
  ((($while B_term_1 S_term_2) (exists ((r__1 Bool) (n_r2 Int) (r_r2 Int) (a_r2 Int)) (and r__1
  (B.Sem B_term_1 r__1 n r a)
  (S.Sem S_term_2 n_r2 r_r2 a_r2 n r a)
  (Start.Sem Start_term_0 n_r0 r_r0 a_r0 n_r2 r_r2 a_r2)))
(exists ((r__1 Bool)) (and (not r__1)
  (B.Sem B_term_1 r__1 n r a)
  (and (= n n_r0)
  (= r r_r0)
  (= a a_r0)))))))))


(synth-fun no07_suma2n_05() Start)


(constraint (exists ((a Int) (n Int)) (Start.Sem no07_suma2n_05 3 0 1 n 6 a)))
(constraint (exists ((a Int) (n Int)) (Start.Sem no07_suma2n_05 3 0 2 n 5 a)))
(constraint (exists ((a Int) (n Int)) (Start.Sem no07_suma2n_05 5 0 3 n 12 a)))

(check-synth)