(declare-term-types
((B 0) (E 0) (S 0) (Start 0))
((($< E E))
(($IVary )
($IInt1 )
($+ E E)
($IInt-1 )
($IVarx ))
(($int=x E)
($seq S S))
(($while B S))))


(define-funs-rec
((B.Sem ((B_term_0 B) (r__0 Bool) (x Int) (y Int)) Bool)
(E.Sem ((E_term_0 E) (r__0 Int) (x Int) (y Int)) Bool)
(S.Sem ((S_term_0 S) (x_r0 Int) (y_r0 Int) (x Int) (y Int)) Bool)
(Start.Sem ((Start_term_0 Start) (x_r0 Int) (y_r0 Int) (x Int) (y Int)) Bool))

((match B_term_0
  ((($< E_term_1 E_term_2) (exists ((r__1 Int) (r__2 Int)) (and (= r__0 (< r__1 r__2))
  (E.Sem E_term_1 r__1 x y)
  (E.Sem E_term_2 r__2 x y))))))
(match E_term_0
  (($IVary (exists ((r__1 Int)) (and (= r__0 r__1)
  (= r__1 y))))
($IInt1 (exists ((r__1 Int)) (and (= r__0 r__1)
  (= r__1 1))))
(($+ E_term_1 E_term_2) (exists ((r__1 Int) (r__2 Int)) (and (= r__0 (+ r__1 r__2))
  (E.Sem E_term_1 r__1 x y)
  (E.Sem E_term_2 r__2 x y))))
($IInt-1 (exists ((r__1 Int)) (and (= r__0 r__1)
  (= r__1 (- 1)))))
($IVarx (exists ((r__1 Int)) (and (= r__0 r__1)
  (= r__1 x))))))
(match S_term_0
  ((($int=x E_term_1) (exists ((r__1 Int)) (and (and (= x r__1)
  (= y y_r0))
  (E.Sem E_term_1 r__1 x y))))
(($seq S_term_1 S_term_2) (exists ((x_r1 Int) (y_r1 Int)) (and (S.Sem S_term_1 x_r1 y_r1 x y)
  (S.Sem S_term_2 x_r0 y_r0 x_r1 y_r1))))))
(match Start_term_0
  ((($while B_term_1 S_term_2) (exists ((r__1 Bool) (x_r2 Int) (y_r2 Int)) (and r__1
  (B.Sem B_term_1 r__1 x y)
  (S.Sem S_term_2 x_r2 y_r2 x y)
  (Start.Sem Start_term_0 x_r0 y_r0 x_r2 y_r2)))
(exists ((r__1 Bool)) (and (not r__1)
  (B.Sem B_term_1 r__1 x y)
  (and (= x x_r0)
  (= y y_r0)))))))))


(synth-fun basicTest_SetBothtoLarger_01() Start)


(constraint (Start.Sem basicTest_SetBothtoLarger_01 4 10 10 10))
(constraint (Start.Sem basicTest_SetBothtoLarger_01 12 20 20 20))
(constraint (Start.Sem basicTest_SetBothtoLarger_01 20 12 20 20))

(check-synth)