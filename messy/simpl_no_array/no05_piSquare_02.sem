(declare-term-types
((A 0) (B 0) (E 0) (S 0) (Start 0))
((($IVart1 )
($IVarr )
($IVarn ))
(($< A A))
(($+ A A)
($- A A)
($* A A))
(($seq S S)
($int=r E)
($int=n E)
($int=t1 E))
(($while B S))))


(define-funs-rec
((A.Sem ((A_term_0 A) (r__0 Int) (n Int) (r Int) (t1 Int)) Bool)
(B.Sem ((B_term_0 B) (r__0 Bool) (n Int) (r Int) (t1 Int)) Bool)
(E.Sem ((E_term_0 E) (r__0 Int) (n Int) (r Int) (t1 Int)) Bool)
(S.Sem ((S_term_0 S) (n_r0 Int) (r_r0 Int) (t1_r0 Int) (n Int) (r Int) (t1 Int)) Bool)
(Start.Sem ((Start_term_0 Start) (n_r0 Int) (r_r0 Int) (t1_r0 Int) (n Int) (r Int) (t1 Int)) Bool))

((match A_term_0
  (($IVart1 (exists ((r__1 Int)) (and (= r__0 r__1)
  (= r__1 t1))))
($IVarr (exists ((r__1 Int)) (and (= r__0 r__1)
  (= r__1 r))))
($IVarn (exists ((r__1 Int)) (and (= r__0 r__1)
  (= r__1 n))))))
(match B_term_0
  ((($< A_term_1 A_term_2) (exists ((r__1 Int) (r__2 Int)) (and (= r__0 (< r__1 r__2))
  (A.Sem A_term_1 r__1 n r t1)
  (A.Sem A_term_2 r__2 n r t1))))))
(match E_term_0
  ((($+ A_term_1 A_term_2) (exists ((r__1 Int) (r__2 Int)) (and (= r__0 (+ r__1 r__2))
  (A.Sem A_term_1 r__1 n r t1)
  (A.Sem A_term_2 r__2 n r t1))))
(($- A_term_1 A_term_2) (exists ((r__1 Int) (r__2 Int)) (and (= r__0 (- r__1 r__2))
  (A.Sem A_term_1 r__1 n r t1)
  (A.Sem A_term_2 r__2 n r t1))))
(($* A_term_1 A_term_2) (exists ((r__1 Int) (r__2 Int)) (and (= r__0 (* r__1 r__2))
  (A.Sem A_term_1 r__1 n r t1)
  (A.Sem A_term_2 r__2 n r t1))))))
(match S_term_0
  ((($seq S_term_1 S_term_2) (exists ((n_r1 Int) (r_r1 Int) (t1_r1 Int)) (and (S.Sem S_term_1 n_r1 r_r1 t1_r1 n r t1)
  (S.Sem S_term_2 n_r0 r_r0 t1_r0 n_r1 r_r1 t1_r1))))
(($int=r E_term_1) (exists ((r__1 Int)) (and (and (= n n_r0)
  (= r r__1)
  (= t1 t1_r0))
  (E.Sem E_term_1 r__1 n r t1))))
(($int=n E_term_1) (exists ((r__1 Int)) (and (and (= n r__1)
  (= r r_r0)
  (= t1 t1_r0))
  (E.Sem E_term_1 r__1 n r t1))))
(($int=t1 E_term_1) (exists ((r__1 Int)) (and (and (= n n_r0)
  (= r r_r0)
  (= t1 r__1))
  (E.Sem E_term_1 r__1 n r t1))))))
(match Start_term_0
  ((($while B_term_1 S_term_2) (exists ((r__1 Bool) (n_r2 Int) (r_r2 Int) (t1_r2 Int)) (and r__1
  (B.Sem B_term_1 r__1 n r t1)
  (S.Sem S_term_2 n_r2 r_r2 t1_r2 n r t1)
  (Start.Sem Start_term_0 n_r0 r_r0 t1_r0 n_r2 r_r2 t1_r2)))
(exists ((r__1 Bool)) (and (not r__1)
  (B.Sem B_term_1 r__1 n r t1)
  (and (= n n_r0)
  (= r r_r0)
  (= t1 t1_r0)))))))))


(synth-fun no05_piSquare_02() Start)


(constraint (exists ((t1 Int) (n Int)) (Start.Sem no05_piSquare_02 1 1 4123 n 1 t1)))
(constraint (exists ((t1 Int) (n Int)) (Start.Sem no05_piSquare_02 2 1 4123 n 4 t1)))
(constraint (exists ((t1 Int) (n Int)) (Start.Sem no05_piSquare_02 3 1 4123 n 36 t1)))

(check-synth)