;; GCPE_09: right symbol 5 = 1
           
;; (set-info :format-version "2.2.0")
;; (set-info :author("Rahul Krishnan"))
;; (set-info :realizable true)

(declare-term-types
    ;; Nonterminals
    ((Start 0) (R 0))
    
    ;; Productions
    (
        (($eval R))
    
        (
            ($char_0)         ;; (str.to.re "0")
            ($char_1)         ;; (str.to.re "1")
            ($any)            ;; (re.allchar)
            ($opt R)          ;; (re.opt r1)
            ($or R R)         ;; (re.union r1 r2)
            ($concat R R)     ;; (re.++ r1 r2)
            ($star R)         ;; (re.* r1)
        )
    )
)

(define-funs-rec
    (
        (Start.Sem ((t Start) (str String) (result Bool)) Bool)
        (R.Sem ((t R) (result RegLan)) Bool)
    )
    
    (
        (! (match t (
            (($eval t1) (exists
                ((r1 RegLan))
                (and
                    (R.Sem t1 r1) 
                    (= result (str.in_re str r1))
                )
            ))
        )) :input (str) :output (result))
        (! (match t (
            ($char_0 (= result (str.to_re "0")) )
            ($char_1 (= result (str.to_re "1")) )
            ($any (= result re.allchar) ) 
            (($or t1 t2)
                (exists
                    (
                        (r1 RegLan) 
                        (r2 RegLan) 
                    )
                    (and 
                        (R.Sem t1 r1) 
                        (R.Sem t2 r2) 
                        (= result (re.union r1 r2))
                    )
                )
            )
            (($concat t1 t2)
                (exists
                    (
                        (r1 RegLan)
                        (r2 RegLan)
                    )
                    (and 
                        (R.Sem t1 r1) 
                        (R.Sem t2 r2)
                        (= result (re.++ r1 r2))
                    )
                )
            )
            (($opt t1)
                (exists
                    (
                        (r1 RegLan)
                    )
                    (and 
                        (R.Sem t1 r1)
                        (= result (re.opt r1))
                    )
                )
            )
            (($star t1)
                (exists
                    (
                        (r1 RegLan)
                    )
                    (and 
                        (R.Sem t1 r1) 
                        (= result (re.* r1))
                    )
                )
            )
        )) :input () :output (result))
    )
)

(synth-fun match_regex() Start)
(constraint (Start.Sem match_regex "00000" true))
(constraint (Start.Sem match_regex "00001" true))
(constraint (Start.Sem match_regex "00010" true))
(constraint (Start.Sem match_regex "00011" true))
(constraint (Start.Sem match_regex "00100" true))
(constraint (Start.Sem match_regex "00101" true))
(constraint (Start.Sem match_regex "00110" true))
(constraint (Start.Sem match_regex "00111" true))
(constraint (Start.Sem match_regex "01000" true))
(constraint (Start.Sem match_regex "01001" true))
(constraint (Start.Sem match_regex "01010" true))
(constraint (Start.Sem match_regex "01011" true))
(constraint (Start.Sem match_regex "01100" true))
(constraint (Start.Sem match_regex "01101" true))
(constraint (Start.Sem match_regex "01110" true))
(constraint (Start.Sem match_regex "01111" true))
(constraint (Start.Sem match_regex "000000" true))
(constraint (Start.Sem match_regex "000001" true))
(constraint (Start.Sem match_regex "000010" true))
(constraint (Start.Sem match_regex "000011" true))
(constraint (Start.Sem match_regex "000100" true))
(constraint (Start.Sem match_regex "000101" true))
(constraint (Start.Sem match_regex "000110" true))
(constraint (Start.Sem match_regex "000111" true))
(constraint (Start.Sem match_regex "001000" true))
(constraint (Start.Sem match_regex "001001" true))
(constraint (Start.Sem match_regex "001010" true))
(constraint (Start.Sem match_regex "001011" true))
(constraint (Start.Sem match_regex "001100" true))
(constraint (Start.Sem match_regex "001101" true))
(constraint (Start.Sem match_regex "001110" true))
(constraint (Start.Sem match_regex "001111" true))
(constraint (Start.Sem match_regex "100000" true))
(constraint (Start.Sem match_regex "100001" true))
(constraint (Start.Sem match_regex "100010" true))
(constraint (Start.Sem match_regex "100011" true))
(constraint (Start.Sem match_regex "100100" true))
(constraint (Start.Sem match_regex "100101" true))
(constraint (Start.Sem match_regex "100110" true))
(constraint (Start.Sem match_regex "100111" true))
(constraint (Start.Sem match_regex "101000" true))
(constraint (Start.Sem match_regex "101001" true))
(constraint (Start.Sem match_regex "101010" true))
(constraint (Start.Sem match_regex "101011" true))
(constraint (Start.Sem match_regex "101100" true))
(constraint (Start.Sem match_regex "101101" true))
(constraint (Start.Sem match_regex "101110" true))
(constraint (Start.Sem match_regex "101111" true))
(constraint (Start.Sem match_regex "0000000" true))
(constraint (Start.Sem match_regex "0000001" true))
(constraint (Start.Sem match_regex "0000010" true))
(constraint (Start.Sem match_regex "0000011" true))
(constraint (Start.Sem match_regex "0000100" true))
(constraint (Start.Sem match_regex "0000101" true))
(constraint (Start.Sem match_regex "0000110" true))
(constraint (Start.Sem match_regex "0000111" true))
(constraint (Start.Sem match_regex "0001000" true))
(constraint (Start.Sem match_regex "0001001" true))
(constraint (Start.Sem match_regex "0001010" true))
(constraint (Start.Sem match_regex "0001011" true))
(constraint (Start.Sem match_regex "0001100" true))
(constraint (Start.Sem match_regex "0001101" true))
(constraint (Start.Sem match_regex "0001110" true))
(constraint (Start.Sem match_regex "0001111" true))
(constraint (Start.Sem match_regex "0100000" true))
(constraint (Start.Sem match_regex "0100001" true))
(constraint (Start.Sem match_regex "0100010" true))
(constraint (Start.Sem match_regex "0100011" true))
(constraint (Start.Sem match_regex "0100100" true))
(constraint (Start.Sem match_regex "0100101" true))
(constraint (Start.Sem match_regex "0100110" true))
(constraint (Start.Sem match_regex "0100111" true))
(constraint (Start.Sem match_regex "0101000" true))
(constraint (Start.Sem match_regex "0101001" true))
(constraint (Start.Sem match_regex "0101010" true))
(constraint (Start.Sem match_regex "0101011" true))
(constraint (Start.Sem match_regex "0101100" true))
(constraint (Start.Sem match_regex "0101101" true))
(constraint (Start.Sem match_regex "0101110" true))
(constraint (Start.Sem match_regex "0101111" true))
(constraint (Start.Sem match_regex "1000000" true))
(constraint (Start.Sem match_regex "1000001" true))
(constraint (Start.Sem match_regex "1000010" true))
(constraint (Start.Sem match_regex "1000011" true))
(constraint (Start.Sem match_regex "1000100" true))
(constraint (Start.Sem match_regex "1000101" true))
(constraint (Start.Sem match_regex "1000110" true))
(constraint (Start.Sem match_regex "1000111" true))
(constraint (Start.Sem match_regex "1001000" true))
(constraint (Start.Sem match_regex "1001001" true))
(constraint (Start.Sem match_regex "1001010" true))
(constraint (Start.Sem match_regex "1001011" true))
(constraint (Start.Sem match_regex "1001100" true))
(constraint (Start.Sem match_regex "1001101" true))
(constraint (Start.Sem match_regex "1001110" true))
(constraint (Start.Sem match_regex "1001111" true))
(constraint (Start.Sem match_regex "1100000" true))
(constraint (Start.Sem match_regex "1100001" true))
(constraint (Start.Sem match_regex "1100010" true))
(constraint (Start.Sem match_regex "1100011" true))
(constraint (Start.Sem match_regex "1100100" true))
(constraint (Start.Sem match_regex "1100101" true))
(constraint (Start.Sem match_regex "1100110" true))
(constraint (Start.Sem match_regex "1100111" true))
(constraint (Start.Sem match_regex "1101000" true))
(constraint (Start.Sem match_regex "1101001" true))
(constraint (Start.Sem match_regex "1101010" true))
(constraint (Start.Sem match_regex "1101011" true))
(constraint (Start.Sem match_regex "1101100" true))
(constraint (Start.Sem match_regex "1101101" true))
(constraint (Start.Sem match_regex "1101110" true))
(constraint (Start.Sem match_regex "1101111" true))
(constraint (Start.Sem match_regex "10000" false))
(constraint (Start.Sem match_regex "10001" false))
(constraint (Start.Sem match_regex "10010" false))
(constraint (Start.Sem match_regex "10011" false))
(constraint (Start.Sem match_regex "10100" false))
(constraint (Start.Sem match_regex "10101" false))
(constraint (Start.Sem match_regex "10110" false))
(constraint (Start.Sem match_regex "10111" false))
(constraint (Start.Sem match_regex "11000" false))
(constraint (Start.Sem match_regex "11001" false))
(constraint (Start.Sem match_regex "11010" false))
(constraint (Start.Sem match_regex "11011" false))
(constraint (Start.Sem match_regex "11100" false))
(constraint (Start.Sem match_regex "11101" false))
(constraint (Start.Sem match_regex "11110" false))
(constraint (Start.Sem match_regex "11111" false))
(constraint (Start.Sem match_regex "010000" false))
(constraint (Start.Sem match_regex "010001" false))
(constraint (Start.Sem match_regex "010010" false))
(constraint (Start.Sem match_regex "010011" false))
(constraint (Start.Sem match_regex "010100" false))
(constraint (Start.Sem match_regex "010101" false))
(constraint (Start.Sem match_regex "010110" false))
(constraint (Start.Sem match_regex "010111" false))
(constraint (Start.Sem match_regex "011000" false))
(constraint (Start.Sem match_regex "011001" false))
(constraint (Start.Sem match_regex "011010" false))
(constraint (Start.Sem match_regex "011011" false))
(constraint (Start.Sem match_regex "011100" false))
(constraint (Start.Sem match_regex "011101" false))
(constraint (Start.Sem match_regex "011110" false))
(constraint (Start.Sem match_regex "011111" false))
(constraint (Start.Sem match_regex "110000" false))
(constraint (Start.Sem match_regex "110001" false))
(constraint (Start.Sem match_regex "110010" false))
(constraint (Start.Sem match_regex "110011" false))
(constraint (Start.Sem match_regex "110100" false))
(constraint (Start.Sem match_regex "110101" false))
(constraint (Start.Sem match_regex "110110" false))
(constraint (Start.Sem match_regex "110111" false))
(constraint (Start.Sem match_regex "111000" false))
(constraint (Start.Sem match_regex "111001" false))
(constraint (Start.Sem match_regex "111010" false))
(constraint (Start.Sem match_regex "111011" false))
(constraint (Start.Sem match_regex "111100" false))
(constraint (Start.Sem match_regex "111101" false))
(constraint (Start.Sem match_regex "111110" false))
(constraint (Start.Sem match_regex "111111" false))
(constraint (Start.Sem match_regex "0010000" false))
(constraint (Start.Sem match_regex "0010001" false))
(constraint (Start.Sem match_regex "0010010" false))
(constraint (Start.Sem match_regex "0010011" false))
(constraint (Start.Sem match_regex "0010100" false))
(constraint (Start.Sem match_regex "0010101" false))
(constraint (Start.Sem match_regex "0010110" false))
(constraint (Start.Sem match_regex "0010111" false))
(constraint (Start.Sem match_regex "0011000" false))
(constraint (Start.Sem match_regex "0011001" false))
(constraint (Start.Sem match_regex "0011010" false))
(constraint (Start.Sem match_regex "0011011" false))
(constraint (Start.Sem match_regex "0011100" false))
(constraint (Start.Sem match_regex "0011101" false))
(constraint (Start.Sem match_regex "0011110" false))
(constraint (Start.Sem match_regex "0011111" false))
(constraint (Start.Sem match_regex "0110000" false))
(constraint (Start.Sem match_regex "0110001" false))
(constraint (Start.Sem match_regex "0110010" false))
(constraint (Start.Sem match_regex "0110011" false))
(constraint (Start.Sem match_regex "0110100" false))
(constraint (Start.Sem match_regex "0110101" false))
(constraint (Start.Sem match_regex "0110110" false))
(constraint (Start.Sem match_regex "0110111" false))
(constraint (Start.Sem match_regex "0111000" false))
(constraint (Start.Sem match_regex "0111001" false))
(constraint (Start.Sem match_regex "0111010" false))
(constraint (Start.Sem match_regex "0111011" false))
(constraint (Start.Sem match_regex "0111100" false))
(constraint (Start.Sem match_regex "0111101" false))
(constraint (Start.Sem match_regex "0111110" false))
(constraint (Start.Sem match_regex "0111111" false))
(constraint (Start.Sem match_regex "1010000" false))
(constraint (Start.Sem match_regex "1010001" false))
(constraint (Start.Sem match_regex "1010010" false))
(constraint (Start.Sem match_regex "1010011" false))
(constraint (Start.Sem match_regex "1010100" false))
(constraint (Start.Sem match_regex "1010101" false))
(constraint (Start.Sem match_regex "1010110" false))
(constraint (Start.Sem match_regex "1010111" false))
(constraint (Start.Sem match_regex "1011000" false))
(constraint (Start.Sem match_regex "1011001" false))
(constraint (Start.Sem match_regex "1011010" false))
(constraint (Start.Sem match_regex "1011011" false))
(constraint (Start.Sem match_regex "1011100" false))
(constraint (Start.Sem match_regex "1011101" false))
(constraint (Start.Sem match_regex "1011110" false))
(constraint (Start.Sem match_regex "1011111" false))
(constraint (Start.Sem match_regex "1110000" false))
(constraint (Start.Sem match_regex "1110001" false))
(constraint (Start.Sem match_regex "1110010" false))
(constraint (Start.Sem match_regex "1110011" false))
(constraint (Start.Sem match_regex "1110100" false))
(constraint (Start.Sem match_regex "1110101" false))
(constraint (Start.Sem match_regex "1110110" false))
(constraint (Start.Sem match_regex "1110111" false))
(constraint (Start.Sem match_regex "1111000" false))
(constraint (Start.Sem match_regex "1111001" false))
(constraint (Start.Sem match_regex "1111010" false))
(constraint (Start.Sem match_regex "1111011" false))
(constraint (Start.Sem match_regex "1111100" false))
(constraint (Start.Sem match_regex "1111101" false))
(constraint (Start.Sem match_regex "1111110" false))
(constraint (Start.Sem match_regex "1111111" false))
(check-synth)
